import SwiftUI

struct üì∞SheetHandlerOnContentView: ViewModifier {
    @EnvironmentObject var model: üì±AppModel
    func body(content: Content) -> some View {
        content
            .sheet(item: self.$model.presentedSheetOnContentView) { ‚ìòtem in
                if case .dictionary(let ‚ì•iewController) = ‚ìòtem {
                    üìòDictionarySheetView(‚ì•iewController)
                } else {
                    NavigationStack {
                        Group {
                            switch ‚ìòtem {
                                case .widget: üìñWidgetSheetView()
                                case .notesImport: üì•NotesImportSheetView()
                                case .notesExport: üì§ExportNotesSheetView()
                                case .customizeSearch: üîçCustomizeSearchSheetView()
                                case .dictionary(_): EmptyView()
                                case .aboutApp: Self.aboutAppSheetView()
                                case .purchase: üõíInAppPurchaseMenu()
                            }
                        }
                        .toolbar { Self.DismissButton() }
                    }
                }
            }
            .modifier(üìñDismissWidgetSheetOnBackground())
    }
}

private extension üì∞SheetHandlerOnContentView {
    private static func aboutAppSheetView() -> some View {
        List {
            ‚ÑπÔ∏èAboutAppContent()
        }
        .navigationTitle(.init("About App", tableName: "üåêAboutApp"))
    }
    private struct DismissButton: ToolbarContent {
        @EnvironmentObject var model: üì±AppModel
        var body: some ToolbarContent {
            ToolbarItem(placement: .topBarTrailing) {
                Button {
                    self.model.presentedSheetOnContentView = nil
                    UISelectionFeedbackGenerator().selectionChanged()
                } label: {
                    Image(systemName: "xmark.circle.fill")
                        .symbolRenderingMode(.hierarchical)
                        .font(.title3)
                        .foregroundStyle(Color.secondary)
                }
                .keyboardShortcut(.cancelAction)
            }
        }
    }
}
