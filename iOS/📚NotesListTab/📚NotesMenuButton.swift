import SwiftUI

struct ðŸ“šNotesMenuButton: ToolbarContent { // ðŸª„
    @EnvironmentObject var model: ðŸ“±AppModel
    @Environment(\.editMode) var editMode
    let placement: ToolbarItemPlacement
    var body: some ToolbarContent {
        ToolbarItem(placement: self.placement) {
            Menu {
                if UIDevice.current.userInterfaceIdiom == .phone {
                    ðŸ“¥NotesImportSheetButton()
                }
                self.notesExportSheetButton()
                Divider()
                self.customizeSearchSheetButton()
                Divider()
                ðŸš®DeleteAllNotesButton()
            } label: {
                Label("Menu", systemImage: "wand.and.rays")
            }
            .modifier(ðŸš®DeleteAllNotesButton.ConfirmDialog())
            .disabled(self.editMode?.wrappedValue == .active)
        }
    }
}

private extension ðŸ“šNotesMenuButton {
    private func customizeSearchSheetButton() -> some View {
        Button {
            self.model.presentSheet(.customizeSearch)
        } label: {
            Label("Customize search", systemImage: "magnifyingglass")
        }
    }
    private func notesExportSheetButton() -> some View {
        Button {
            self.model.presentSheet(.notesExport)
        } label: {
            Label("Export notes", systemImage: "tray.and.arrow.up")
        }
        .disabled(self.model.notes.isEmpty)
    }
}
