import SwiftUI

extension ðŸ“±AppModel {
    func switchNotesListTab() {
        self.selectedTab = .notesList
        self.selectedSidebar = .notesList
    }
    func scrollTopByNewNoteShortcut(_ â“¤rl: URL, _ â“¢crollViewProxy: ScrollViewProxy) {
        if case .newNoteShortcut = ðŸª§Tag.decode(â“¤rl) {
            DispatchQueue.main.asyncAfter(deadline: .now() + 0.2) {
                â“¢crollViewProxy.scrollTo("NewNoteButton")
            }
        }
    }
    func addNewNoteByNewNoteShortcut() {
        DispatchQueue.main.asyncAfter(deadline: .now() + 0.4) {
            self.addNewNoteOnTop()
        }
    }
    func handleToPresentADSheet() {
        DispatchQueue.main.asyncAfter(deadline: .now() + 0.7) {
            if self.inAppPurchaseModel.checkToShowADSheet() {
                self.presentedSheetOnWidgetSheet = .ad
            }
        }
    }
    func dismissWidgetSheetOnBackground(_ â“¢cenePhase: ScenePhase) {
        guard case .widget(_) = self.presentedSheetOnContentView else {
            return
        }
        if â“¢cenePhase == .background {
            self.presentedSheetOnWidgetSheet = nil
            self.presentedSheetOnContentView = nil
        }
    }
    func submitNotesImport(_ â“’onvertedNotes: ðŸ“šNotes) {
        self.insertOnTop(â“’onvertedNotes)
        self.presentedSheetOnContentView = nil
        ðŸ’¥Feedback.success()
    }
}
