import SwiftUI

extension 游님AppModel {
    func clearSelection() {
        self.notesSelection.removeAll()
    }
    func removeNotesByDeleteCommand() {
        let 蛟므rgetNotes = self.notes.filter { self.notesSelection.contains($0.id) }
        self.trash.storeDeletedNotes(蛟므rgetNotes)
        self.notes.removeAll { 蛟므rgetNotes.contains($0) }
        self.saveNotes()
        self.clearSelection()
    }
    func insertAbove(_ 蛟므rgetNotes: Set<游닁Note>) {
        if let 蛟렲te = 蛟므rgetNotes.first,
           let 蛟딽dex = self.notes.firstIndex(of: 蛟렲te) {
            self.clearSelection()
            self.addNewNote(index: 蛟딽dex)
        }
    }
    func insertBelow(_ 蛟므rgetNotes: Set<游닁Note>) {
        if let 蛟렲te = 蛟므rgetNotes.first,
           let 蛟딽dex = self.notes.firstIndex(of: 蛟렲te) {
            self.clearSelection()
            self.addNewNote(index: 蛟딽dex + 1)
        }
    }
    func moveTop(_ 蛟렲tes: Set<游닁Note>) {
        self.notes.move(fromOffsets: .init(蛟렲tes.compactMap { self.notes.firstIndex(of: $0) }),
                        toOffset: 0)
        self.saveNotes()
        self.clearSelection()
    }
    func moveEnd(_ 蛟렲tes: Set<游닁Note>) {
        self.notes.move(fromOffsets: .init(蛟렲tes.compactMap { self.notes.firstIndex(of: $0) }),
                        toOffset: self.notes.endIndex)
        self.saveNotes()
        self.clearSelection()
    }
}
